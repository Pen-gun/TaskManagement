@page
@model TaskManagementv2.Pages.Employee.Employee1Model
@{
    ViewData["Title"] = "Tasks List";
}

<div class="card-shadow">
    <div class="card-header">
        @ViewData["Title"]
    </div>
    <div class="card-body">
        <!-- Filters -->
        <div class="row mb-3">
            <div class="col-md-3">
                <input type="text" id="taskFilter" class="form-control" placeholder="Search tasks...">
            </div>
            <div class="col-md-3">
                <select id="priorityFilter" class="form-control">
                    <option value="">Filter by Priority</option>
                    <option value="3">High</option>
                    <option value="2">Medium</option>
                    <option value="1">Low</option>
                </select>
            </div>
            <div class="col-md-3">
                <select id="statusFilter" class="form-control">
                    <option value="">Filter by Status</option>
                    <option value="Pending">Pending</option>
                    <option value="In-Progress">In Progress</option>
                    <option value="Completed">Completed</option>
                    <option value="Not Started">Not started</option>
                </select>
            </div>
        </div>

        <!-- Table -->
        <table class="table" id="taskTable">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.Taasks[0].Title)</th>
                    <th>@Html.DisplayNameFor(model => model.Taasks[0].Description)</th>
                    <th>@Html.DisplayNameFor(model => model.Taasks[0].Priority)</th>
                    <th>@Html.DisplayNameFor(model => model.Taasks[0].Deadline)</th>
                    <th>@Html.DisplayNameFor(model => model.Taasks[0].UpdatedDate)</th>
                    <th>@Html.DisplayNameFor(model => model.Taasks[0].Status)</th>
                    <th>@Html.DisplayNameFor(Model => Model.Taasks[0].AssignedTo)</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Taasks)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.Title)</td>
                        <td>@Html.DisplayFor(modelItem => item.Description)</td>
                        <td class="priority">@Html.DisplayFor(modelItem => item.Priority)</td>
                        <td class="deadline">@Html.DisplayFor(modelItem => item.Deadline)</td>
                        <td>@Html.DisplayFor(modelItem => item.UpdatedDate)</td>
                        <td class="status">@Html.DisplayFor(modelItem => item.Status)</td>
                        <td>@Html.DisplayFor(modelItem => item.AssignedTo)</td>
                        <td>
                            <a asp-page="./Edit" asp-route-id="@item.TaskId" class="btn btn-primary">Edit</a> |
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- jQuery & Filtering Script -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        function filterTasks() {
            var textSearch = $("#taskFilter").val().toLowerCase();
            var selectedPriority = $("#priorityFilter").val().toLowerCase();
            var selectedStatus = $("#statusFilter").val().toLowerCase();

            $("#taskTable tbody tr").filter(function () {
                var textMatch = $(this).text().toLowerCase().indexOf(textSearch) > -1;
                var priorityMatch = selectedPriority === "" || $(this).find(".priority").text().toLowerCase() === selectedPriority;
                var statusMatch = selectedStatus === "" || $(this).find(".status").text().toLowerCase() === selectedStatus;

             

                $(this).toggle(textMatch && priorityMatch && statusMatch);
            });
        }

        $("#taskFilter, #priorityFilter, #statusFilter").on("input change", filterTasks);
    });
</script>
